{"version":3,"sources":["components/DisplayData.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayData","props","weather","temperature","description","location","region","country","wind_speed","pressure","precip","humidity","img","className","src","alt","Navbar","onSubmit","e","changeWeather","placeholder","onChange","changeRegion","target","value","App","state","coords","latitude","longitude","data","inputData","change","setState","event","preventDefault","Axios","get","then","res","weatherData","current","weather_descriptions","name","weather_icons","navigator","geolocation","getCurrentPosition","position","newCoords","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b166fe30.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction DisplayData(props){\r\n  // console.log(props.weather);\r\n  const {temperature, description, location, region, country, wind_speed, pressure, precip, humidity, img} = props.weather;\r\n  return (\r\n    <div className=\"user-weather\">\r\n       <div className=\"row\">\r\n                <div className=\"col-md-3 weather-temp\">\r\n                    <h1>{temperature}<sup>o</sup>C , {description}</h1>\r\n                    <h4>{location}<b>{region} , {country}</b></h4>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                    <img className=\"mainImg\" src={img} alt=\"weather-img\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Wind Speed</b>(km/hr)</p>\r\n                    <h2>{wind_speed}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Preassure</b>(millibar)</p>\r\n                    <h2>{pressure}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Precipitation</b>(mm)</p>\r\n                    <h2>{precip}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-md-3 weather-info\">\r\n                    <p><b>Humidity</b>(%)</p>\r\n                    <h2>{humidity}</h2>\r\n                </div>\r\n\r\n            </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayData;","import React from 'react';\r\n\r\nfunction Navbar(props){\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <h1 className=\"title\">Realtime Weather</h1>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <form className=\"region\" onSubmit = {(e) => props.changeWeather(e)} >\r\n          <input className=\"regioninput\" placeholder=\"Enter Your Location\"  onChange={(e) => {props.changeRegion(e.target.value)}}/>\r\n        </form>    \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Axios from 'axios';\nimport DisplayData from './components/DisplayData';\nimport Navbar from './components/Navbar';\n\n\n\nclass App extends React.Component {\n\n\n  state ={\n    coords :{\n      latitude : 37,\n      longitude :127\n    },\n    data : {},\n    inputData : \"\"\n  }\n\n  componentDidMount(){\n    // console.log('render mounted');\n    if(navigator.geolocation){\n      // console.log('supported');\n      navigator.geolocation.getCurrentPosition((position) => {\n        // console.log(position.coords.latitude, position.coords.longitude);\n      \n      let newCoords ={\n        latitude : position.coords.latitude,\n        longitude : position.coords.longitude\n      }\n      this.setState({coords : newCoords});\n      \n      Axios.get(`http://api.weatherstack.com/current?access_key=698470f5e00905b485d845b29a1f854d&query=${this.state.coords.latitude},${this.state.coords.longitude}`).then((res)=> {\n          // console.log(res);\n          let weatherData = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n\n          }\n          this.setState({data : weatherData});\n        })\n\n\n\n      });\n    }else{\n      console.log('not supported');\n    }\n  }\n\n  change = (value) => {\n    // console.log(value);\n    this.setState({inputData : value});\n    // console.log(this.state.inputData);\n  }\n  \n\n  changeWeather = (event) =>{\n    event.preventDefault();\n    Axios.get(`http://api.weatherstack.com/current?access_key=698470f5e00905b485d845b29a1f854d&query=${this.state.inputData}`).then((res)=> {\n          // console.log(res);\n          let weatherData = {\n            temperature: res.data.current.temperature,\n            description: res.data.current.weather_descriptions[0],\n            location: res.data.location.name,\n            region: res.data.location.region,\n            country: res.data.location.country,\n            wind_speed: res.data.current.wind_speed,\n            pressure: res.data.current.pressure,\n            precip: res.data.current.precip,\n            humidity: res.data.current.humidity,\n            img: res.data.current.weather_icons\n\n          }\n          this.setState({data : weatherData});\n        })\n\n  }\n\n\n\n\n  render(){\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Navbar changeRegion ={this.change} changeWeather = {this.changeWeather} />\n          <DisplayData weather = {this.state.data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}